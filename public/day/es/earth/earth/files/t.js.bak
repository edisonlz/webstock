var time;
var sun = new Image();
var moon = new Image();
var earth = new Image();
//var ctx;
var star_d;

function init(){
  sun.src='images/sun.png';
  moon.src = 'images/moon.jpg';
  moon.width=15;
  moon.height=15;
  earth.src = 'images/earth.png';
  earth.width =30;
  earth.height =30;
  init_canvas($("#suns"));
  load_star();
  //Earth Moon Sun
  setInterval(draw,500);
}

/* 
	Draw  Earth Moon Sun
*/

function draw() {
  ctx.globalCompositeOperation = 'destination-over';
  ctx.clearRect(0,0,300,300); // clear canvas
  ctx.fillStyle = 'rgba(0,0,0,0.4)';
  ctx.strokeStyle = 'rgba(0,153,255,0.4)';
  ctx.save();
  ctx.translate(150,150);

  // Earth
  time= new Date();
  ctx.rotate( ((2*Math.PI)/60)*time.getSeconds() + ((2*Math.PI)/60000)*time.getMilliseconds() );
  ctx.translate(105,0);
  //ctx.fillRect(0,-12,50,24); // Shadow
  ctx.drawImage(earth,-12,-12);

  // Moon
  ctx.save();
  ctx.rotate( ((2*Math.PI)/6)*time.getSeconds() + ((2*Math.PI)/6000)*time.getMilliseconds() );
  ctx.translate(0,28.5);
  ctx.drawImage(moon,-3.5,-3.5);
  ctx.restore();

  ctx.restore();
  ctx.beginPath();
  ctx.arc(150,150,105,0,Math.PI*2,false); // Earth orbit
  ctx.stroke();
  
  ctx.drawImage(sun,115,115,70,70);
}

$(document).ready(function(){ 
	init();
});

function init_canvas(target)
{
		if(target==null)
		{
			return;
		}
		var canvasWidth = target.width();
        var canvasHeight = target.height();
        target.html(""); // clear target
        ///target.css("position", "relative"); // for positioning labels and overlay
        if (canvasWidth <= 0 || canvasHeight <= 0)
                throw "Invalid dimensions for plot, width = " + canvasWidth + ", height = " + canvasHeight;
            // the canvas
        var canvas = $('<canvas width="' + canvasWidth + '" height="' + canvasHeight + '"></canvas>').appendTo(target).get(0);
        if ($.browser.msie) // excanvas hack
                canvas = window.G_vmlCanvasManager.initElement(canvas);
        ctx = canvas.getContext("2d");
}
/* 
	End Draw  Earth Moon Sun
*/
function load_star()
{
  $.get("http://chao.tl50.com:3001/stock/stock_radar", function(data){
			  draw_star(parse_star_data(data));
		});
}
function draw_star(data)
{
  //Star
  star_d=new Star_D();
  star_d.init($("#star_s"),data);
}

function parse_star_data(data)
{
	var t2=[];
	var t;
	var radar_list=data.split(';');
	for(i=0;i<30;i++)
	{
		t=radar_list[i].split(',');
		t2.push([i,t[2],t[1],t[0]]);
	}
	///t2.sort(DescSort);
	return t2;
}
function  DescSort(x, y) 
{
   return  x[0]/x[1]  ==  y[0]/y[1]  ?   0  : (x[0]/x[1]  >  y[0]/y[1]  ?   - 1  :  1 );
} 

function Star_D()
{
	var canvasWidth;
	var canvasHeight;
	var hozScale,vertScale;
	var xmax,xmin;
	var ymax,ymin;
	var canvas;
	var ctx;
	var _data;
	var j=0;
	var htm;
	var target;
	///Start Draw;
	this.init=function(itarget,data)
	{
		target=itarget;
		init_canvas(target);
		this.set_data(data);
		this.draw();
	};
	///set Data
	this.set_data=function(data)
	{
		parse_data(data);
		hozScale = canvasWidth / (xmax - xmin);
        vertScale = canvasHeight / (ymax- ymin) -5;
	};
	function parse_data(data)
	{
		xmax=0;
		xmin=10000;
		ymax=0;
		ymin=10000;
		//_data=data.DescSort();
		_data=data;//.sort(DescSort);
		for(i=0;i<data.length;i++)
		{
			if(parseFloat(xmax)<parseFloat(data[i][0]))
			{
				xmax=parseFloat(data[i][0]);
			}
			if(parseFloat(xmin)>parseFloat(data[i][0]))
			{
				xmin=data[i][0];
			}
			if(parseFloat(ymax)<parseFloat(data[i][1]))
			{
				ymax=data[i][1];
			}
			if(parseFloat(ymin)>parseFloat(data[i][1]))
			{
				ymin=data[i][1];
			}
		}
	 };
	 
	 function DescSort(x, y) 
	 {
   		return  x[1]  ==  y[1]  ?   0  : (x[1]  > y[1]  ?   - 1  :  1 );
	 }
	
	 function tHoz(x) 
	 {
            return (x - xmin) * hozScale;
     };
     function tVert(y) 
	 {
            return canvasHeight - (y - ymin) * vertScale;
     };
	///Draw function
	this.draw=function()
	{
	 	var vx;
		var tv;
		//draw stars
  		for (j=1;j<_data.length;j++)
		{
    		 ctx.fillStyle = '#edc240';
			 ctx.beginPath();
             ctx.arc(tHoz(_data[j][0]), tVert(_data[j][1]), _data[j][1]/2, 0, 2 * Math.PI, true);
			 ctx.fill();
             ctx.stroke();
			 ctx.save();
			 ///
			 if(_data[(j+1)]!=null)
			 {
				ctx.beginPath();
				ctx.strokeStyle = "#edc240";
				ctx.moveTo(tHoz(_data[j][0]), tVert(_data[j][1]));
             	ctx.lineTo(tHoz(_data[j+1][0]),tVert(_data[j+1][1]));
				ctx.stroke();
				ctx.closePath();
			 };
			 htm+='<b style="cursor:hand;position:absolute;left:'+(tHoz(_data[j][0]))+'px;top:'+(tVert(_data[j][1]))+'px;width=10px height=10px"><a target="_blank" href="http://chao.tl50.com:3001/vstock/day.htm?code='+_data[j][3]+'"><font style="font-size:12px;color:#993333;">'+_data[j][2]+'</font></a></b>';
	  	}
		$(htm).appendTo(target).get(0);
	};
  ///draw Stars
  function drawStar(r)
  {
	 ctx.save();
  	 ctx.beginPath();
	 ctx.moveTo(r,0);
	 for (i=0;i<9;i++)
	 {
		ctx.rotate(Math.PI/5);
	    if(i%2 == 0) 
		{
    		 ctx.lineTo((r/0.525731)*0.200811,0);
    	}
		else 
		{
      		ctx.lineTo(r,0);
    	}
  	 }
  	//ctx.closePath();
  	ctx.fill();
  	//ctx.restore();
  };

	///Initial Canvas 
	function init_canvas(target)
	{
		if(target==null)
		{
			return;
		}
		canvasWidth = target.width();
        canvasHeight = target.height();
        target.html(""); // clear target
        ///target.css("position", "relative"); // for positioning labels and overlay
        if (canvasWidth <= 0 || canvasHeight <= 0)
                throw "Invalid dimensions for plot, width = " + canvasWidth + ", height = " + canvasHeight;
            // the canvas
        canvas = $('<canvas width="' + canvasWidth + '" height="' + canvasHeight + '"></canvas>').appendTo(target).get(0);
        if ($.browser.msie) // excanvas hack
                canvas = window.G_vmlCanvasManager.initElement(canvas);
        ctx = canvas.getContext("2d");
	}
}
